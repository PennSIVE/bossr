[{"path":"https://pennsive.github.io/bossr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 bossr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pennsive.github.io/bossr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Virgilio Gonzenbach. Author. Eunchan Bae. Author, maintainer.","code":""},{"path":"https://pennsive.github.io/bossr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gonzenbach V, Bae E (2023). bossr: Beta-mixture Unsupervised Oligodendrocytes Segmentation System R. https://pennsive.github.io/bossr/, https://github.com/pennsive/bossr/.","code":"@Manual{,   title = {bossr: Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R},   author = {Virgilio Gonzenbach and Eunchan Bae},   year = {2023},   note = {https://pennsive.github.io/bossr/, https://github.com/pennsive/bossr/}, }"},{"path":"https://pennsive.github.io/bossr/index.html","id":"bossr-","dir":"","previous_headings":"","what":"Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R","title":"Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R","text":"bossr consists functions automated segmentation oligodendrocytes 2D, 3D 4D arrays.","code":""},{"path":"https://pennsive.github.io/bossr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R","text":"install development version:","code":"devtools::install_github('pennsive/bossr')"},{"path":"https://pennsive.github.io/bossr/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R","text":"introduction bossr pipeline, check main article pkgdown site. companion data package, bossrdata, available enable users follow along examples main article. See article information install bossrdata. References main functions can found .","code":""},{"path":"https://pennsive.github.io/bossr/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Beta-mixture Unsupervised Oligodendrocytes Segmentation System in R","text":"get help submit issue GitHub repository.","code":""},{"path":"https://pennsive.github.io/bossr/reference/annotate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate data.frame — annotate_df","title":"Annotate data.frame — annotate_df","text":"function takes dataframe result post_process_df (track_components) integer t (total time points), returns dataframe 4 columns: count, added, deleted, survivor. count number cells time point t. added number new cells time point t (relative time point t - 1); added always NA t = 1. deleted number cells t show later time points. survivor number cells time point t remain time point 1.","code":""},{"path":"https://pennsive.github.io/bossr/reference/annotate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate data.frame — annotate_df","text":"","code":"annotate_df(cell_df, t)"},{"path":"https://pennsive.github.io/bossr/reference/annotate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate data.frame — annotate_df","text":"cell_df dataframe result pos t integer value","code":""},{"path":"https://pennsive.github.io/bossr/reference/annotate_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate data.frame — annotate_df","text":"dataframe 4 columns: count, addition, deletion, survivor.","code":""},{"path":"https://pennsive.github.io/bossr/reference/betamix_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate threshold from image using beta mixture model — betamix_img","title":"Calculate threshold from image using beta mixture model — betamix_img","text":"function takes image array, number mixture components, number cores additional parameters inputs, returns threshold value. detects dimension image array applies betamix_2d(), betamix_3d(), betamix_4d() accordingly calculate threshold.","code":""},{"path":"https://pennsive.github.io/bossr/reference/betamix_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate threshold from image using beta mixture model — betamix_img","text":"","code":"betamix_img(arr, mixnum = 2, n.cores = 1, ...)"},{"path":"https://pennsive.github.io/bossr/reference/betamix_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate threshold from image using beta mixture model — betamix_img","text":"arr image array mixnum number mixture components use beta mixture model. Default 2. n.cores number cores used parallel computing. Default 1. ... additional parameters passed betamix_3d() betamix_4d() functions","code":""},{"path":"https://pennsive.github.io/bossr/reference/betamix_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate threshold from image using beta mixture model — betamix_img","text":"threshold value","code":""},{"path":"https://pennsive.github.io/bossr/reference/connect_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Connected components in an array — connect_components","title":"Connected components in an array — connect_components","text":"function finds connected components array returns labeled array size","code":""},{"path":"https://pennsive.github.io/bossr/reference/connect_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connected components in an array — connect_components","text":"","code":"connect_components(roi_mask, r = 21)"},{"path":"https://pennsive.github.io/bossr/reference/connect_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connected components in an array — connect_components","text":"roi_mask array find connected components r radius connected component filter","code":""},{"path":"https://pennsive.github.io/bossr/reference/connect_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connected components in an array — connect_components","text":"labeled array size","code":""},{"path":"https://pennsive.github.io/bossr/reference/list2nifti.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of arrays to a Nifti object — list2nifti","title":"Convert a list of arrays to a Nifti object — list2nifti","text":"list2nifti() converts list arrays Nifti object using oro.nifti package.","code":""},{"path":"https://pennsive.github.io/bossr/reference/list2nifti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of arrays to a Nifti object — list2nifti","text":"","code":"list2nifti(list, dims)"},{"path":"https://pennsive.github.io/bossr/reference/list2nifti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of arrays to a Nifti object — list2nifti","text":"list list arrays converted Nifti object. dims vector dimensions resulting array.","code":""},{"path":"https://pennsive.github.io/bossr/reference/list2nifti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of arrays to a Nifti object — list2nifti","text":"Nifti object created input list arrays.","code":""},{"path":"https://pennsive.github.io/bossr/reference/list2nifti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of arrays to a Nifti object — list2nifti","text":"","code":"list2nifti(list(array(1:12, c(3, 4)), array(13:24, c(3, 4))), c(3, 4, 2)) #> NIfTI-1 format #>   Type            : nifti #>   Data Type       : 2 (UINT8) #>   Bits per Pixel  : 8 #>   Slice Code      : 0 (Unknown) #>   Intent Code     : 0 (None) #>   Qform Code      : 0 (Unknown) #>   Sform Code      : 0 (Unknown) #>   Dimension       : 3 x 4 x 2 #>   Pixel Dimension : 1 x 1 x 1 #>   Voxel Units     : Unknown #>   Time Units      : Unknown  # convert a list of 3D arrays to a 4D Nifti object list2nifti(list(array(1:12, c(3, 4, 3)), array(13:24, c(3, 4, 3))), c(3, 4, 3, 2)) #> NIfTI-1 format #>   Type            : nifti #>   Data Type       : 2 (UINT8) #>   Bits per Pixel  : 8 #>   Slice Code      : 0 (Unknown) #>   Intent Code     : 0 (None) #>   Qform Code      : 0 (Unknown) #>   Sform Code      : 0 (Unknown) #>   Dimension       : 3 x 4 x 3 x 2 #>   Pixel Dimension : 1 x 1 x 1 x 1 #>   Voxel Units     : Unknown #>   Time Units      : Unknown"},{"path":"https://pennsive.github.io/bossr/reference/make_overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Overlay — make_overlay","title":"Make Overlay — make_overlay","text":"function creates overlay drawing boxes around centroids cells dataframe, specified time point, well cells adjacent time points.","code":""},{"path":"https://pennsive.github.io/bossr/reference/make_overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Overlay — make_overlay","text":"","code":"make_overlay(cell_df, dims, t)"},{"path":"https://pennsive.github.io/bossr/reference/make_overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Overlay — make_overlay","text":"cell_df dataframe containing cell data, columns x, y, z, t, index dims numeric vector length 4, representing dimensions image x, y, z, t t integer representing time point interest","code":""},{"path":"https://pennsive.github.io/bossr/reference/make_overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Overlay — make_overlay","text":"3-dimensional binary array representing overlay","code":""},{"path":"https://pennsive.github.io/bossr/reference/median_filtering.html","id":null,"dir":"Reference","previous_headings":"","what":"Median filter an image — median_filtering","title":"Median filter an image — median_filtering","text":"function takes image applies appropriate median filter function (median_filtering_3d median_filtering_4d) based dimensionality image.","code":""},{"path":"https://pennsive.github.io/bossr/reference/median_filtering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median filter an image — median_filtering","text":"","code":"median_filtering(roi_mask, r = 10, n.cores = 1, ...)"},{"path":"https://pennsive.github.io/bossr/reference/median_filtering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median filter an image — median_filtering","text":"roi_mask image median filtered (3D 4D array) r kernel size median filter n.cores number cores ... extra arguments passed mclapply","code":""},{"path":"https://pennsive.github.io/bossr/reference/plot_overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots a 3D image with an overlay — plot_overlay","title":"Plots a 3D image with an overlay — plot_overlay","text":"plot_overlay wrapper oro.nifti::overlay. takes 3D image overlay output make_overlay() plots chosen slices.","code":""},{"path":"https://pennsive.github.io/bossr/reference/plot_overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots a 3D image with an overlay — plot_overlay","text":"","code":"plot_overlay(img, overlay, z = 1)"},{"path":"https://pennsive.github.io/bossr/reference/plot_overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots a 3D image with an overlay — plot_overlay","text":"img 3D nifti array, usually input boss model overlay overlay result make_overlay z integer vector representing slices plotted","code":""},{"path":"https://pennsive.github.io/bossr/reference/plot_overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots a 3D image with an overlay — plot_overlay","text":"plot cell bodies marked red overlay","code":""},{"path":"https://pennsive.github.io/bossr/reference/post_process_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Postprocceses a data.frame that is the result of track_components — post_process_df","title":"Postprocceses a data.frame that is the result of track_components — post_process_df","text":"function performs annotation data frame sorting unique indexes filtering dataframe based X, Y, Z coordinates. function checks certain conditions assigns new indexes rows meet conditions.","code":""},{"path":"https://pennsive.github.io/bossr/reference/post_process_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Postprocceses a data.frame that is the result of track_components — post_process_df","text":"","code":"post_process_df(df)"},{"path":"https://pennsive.github.io/bossr/reference/post_process_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Postprocceses a data.frame that is the result of track_components — post_process_df","text":"df dataframe","code":""},{"path":"https://pennsive.github.io/bossr/reference/post_process_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Postprocceses a data.frame that is the result of track_components — post_process_df","text":"annotated dataframe","code":""},{"path":"https://pennsive.github.io/bossr/reference/threshold_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold an image — threshold_img","title":"Threshold an image — threshold_img","text":"function takes image threshold value applies appropriate threshold function (threshold_2d, threshold_3d, threshold_4d) based dimensionality image. also checks threshold value correct dimensionality length match image.","code":""},{"path":"https://pennsive.github.io/bossr/reference/threshold_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold an image — threshold_img","text":"","code":"threshold_img(img, thr, n.cores = 1, ...)"},{"path":"https://pennsive.github.io/bossr/reference/threshold_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold an image — threshold_img","text":"img image thresholded (2D, 3D, 4D array) thr threshold value (scalar, vector, matrix) n.cores number cores use parallel processing (used threshold_3d threshold_4d) ... extra arguments passed mclapply","code":""},{"path":"https://pennsive.github.io/bossr/reference/threshold_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Threshold an image — threshold_img","text":"binary mask thresholded image (dimensionality input image)","code":""},{"path":"https://pennsive.github.io/bossr/reference/track_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Track connected components in 4D array — track_components","title":"Track connected components in 4D array — track_components","text":"function tracks connected components 4D array returns dataframe tracked components","code":""},{"path":"https://pennsive.github.io/bossr/reference/track_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track connected components in 4D array — track_components","text":"","code":"track_components(roi_labels, k = 2, size.thr = 100)"},{"path":"https://pennsive.github.io/bossr/reference/track_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track connected components in 4D array — track_components","text":"roi_labels labeled array connected components k minimum number adjacent frames component tracked size.thr minimum size component tracked","code":""},{"path":"https://pennsive.github.io/bossr/reference/track_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track connected components in 4D array — track_components","text":"dataframe tracked components","code":""}]
